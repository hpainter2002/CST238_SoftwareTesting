#0001:['test_ask_question_equilateral', 'test_ask_question_isosceles', 'test_ask_question_scalene', 'test_get_triangle_all_neg', 'test_get_triangle_all_neg', 'test_get_triangle_all_zero', 'test_get_triangle_all_zero', 'test_get_triangle_equilateral_all_char', 'test_get_triangle_equilateral_all_float', 'test_get_triangle_equilateral_all_int', 'test_get_triangle_equilateral_dic', 'test_get_triangle_equilateral_float_int_combo', 'test_get_triangle_equilateral_list', 'test_get_triangle_equilateral_tuple', 'test_get_triangle_invalid_dic', 'test_get_triangle_invalid_list', 'test_get_triangle_invalid_tuple', 'test_get_triangle_isosceles_all_char', 'test_get_triangle_isosceles_all_dic', 'test_get_triangle_isosceles_all_float', 'test_get_triangle_isosceles_all_int', 'test_get_triangle_isosceles_all_list', 'test_get_triangle_isosceles_all_tuple', 'test_get_triangle_isosceles_all_tuple', 'test_get_triangle_isosceles_float_int_combo', 'test_get_triangle_scalene_all_char', 'test_get_triangle_scalene_all_dic', 'test_get_triangle_scalene_all_float', 'test_get_triangle_scalene_all_int', 'test_get_triangle_scalene_all_list', 'test_get_triangle_scalene_all_tuple', 'test_get_triangle_scalene_float_int_combo', 'test_get_triangle_two_zero', 'test_get_triangle_two_zero', 'test_get_triangle_zero_neg', 'test_get_triangle_zero_neg']
#0002:['test_get_triangle_equilateral_all_char', 'test_get_triangle_equilateral_all_float', 'test_get_triangle_equilateral_all_int', 'test_get_triangle_equilateral_float_int_combo', 'test_get_triangle_isosceles_all_char', 'test_get_triangle_isosceles_all_float', 'test_get_triangle_isosceles_all_int', 'test_get_triangle_isosceles_float_int_combo', 'test_get_triangle_scalene_all_char', 'test_get_triangle_scalene_all_float', 'test_get_triangle_scalene_all_int', 'test_get_triangle_scalene_float_int_combo']
#0003:['test_get_quad_disconnected_all_float', 'test_get_quad_disconnected_all_int', 'test_get_quad_disconnected_int_float_combo', 'test_get_quad_disconnected_some_char', 'test_get_quad_invalid_all_float', 'test_get_quad_invalid_all_int', 'test_get_quad_invalid_all_zeros', 'test_get_quad_invalid_int_float_combo', 'test_get_quad_invalid_some_char', 'test_get_quad_rect_type_all_float', 'test_get_quad_rect_type_all_int', 'test_get_quad_rect_type_all_neg', 'test_get_quad_rect_type_int_float_combo', 'test_get_quad_rect_type_some_char', 'test_get_quad_rhombus_all_char', 'test_get_quad_rhombus_all_float', 'test_get_quad_rhombus_all_int', 'test_get_quad_rhombus_int_float_combo', 'test_get_quadrilateral_type_all_char', 'test_get_quadrilateral_type_all_float', 'test_get_quadrilateral_type_all_int', 'test_get_quadrilateral_type_int_float_combo', 'test_get_quadrilateral_type_neg_zero_combo']
#0004:['test_get_quad_disconnected_all_float', 'test_get_quad_disconnected_all_int', 'test_get_quad_disconnected_int_float_combo', 'test_get_quad_disconnected_some_char', 'test_get_quad_invalid_all_float', 'test_get_quad_invalid_all_int', 'test_get_quad_invalid_all_zeros', 'test_get_quad_invalid_int_float_combo', 'test_get_quad_invalid_some_char', 'test_get_quad_rect_type_all_float', 'test_get_quad_rect_type_all_int', 'test_get_quad_rect_type_all_neg', 'test_get_quad_rect_type_int_float_combo', 'test_get_quad_rect_type_some_char', 'test_get_quad_rhombus_all_char', 'test_get_quad_rhombus_all_float', 'test_get_quad_rhombus_all_int', 'test_get_quad_rhombus_int_float_combo', 'test_get_quadrilateral_type_all_char', 'test_get_quadrilateral_type_all_float', 'test_get_quadrilateral_type_all_int', 'test_get_quadrilateral_type_int_float_combo', 'test_get_quadrilateral_type_neg_zero_combo']
#0005:['test_get_quad_disconnected_all_float', 'test_get_quad_disconnected_all_int', 'test_get_quad_disconnected_int_float_combo', 'test_get_quad_disconnected_some_char', 'test_get_quad_invalid_all_float', 'test_get_quad_invalid_all_int', 'test_get_quad_invalid_all_zeros', 'test_get_quad_invalid_int_float_combo', 'test_get_quad_invalid_some_char', 'test_get_quad_rect_type_all_float', 'test_get_quad_rect_type_all_int', 'test_get_quad_rect_type_all_neg', 'test_get_quad_rect_type_int_float_combo', 'test_get_quad_rect_type_some_char', 'test_get_quad_rhombus_all_char', 'test_get_quad_rhombus_all_float', 'test_get_quad_rhombus_all_int', 'test_get_quad_rhombus_int_float_combo', 'test_get_quadrilateral_type_all_char', 'test_get_quadrilateral_type_all_float', 'test_get_quadrilateral_type_all_int', 'test_get_quadrilateral_type_int_float_combo', 'test_get_quadrilateral_type_neg_zero_combo']
#0006:['test_ask_accept_function_pointer', 'test_ask_correct', 'test_ask_correct_no_question', 'test_ask_question_90_percent_keyword', 'test_ask_question_equilateral', 'test_ask_question_invalid_question', 'test_ask_question_isosceles', 'test_ask_question_multiple_keywords', 'test_ask_question_no_question_mark', 'test_ask_question_no_valid_match', 'test_ask_question_scalene', 'test_ask_question_with_ASCII_ques_mark', 'test_ask_question_with_no_spaces', 'test_ask_teach', 'test_ask_teach_teach', 'test_teach_with_no_ask']
#0007:['test_ask_accept_function_pointer', 'test_ask_correct', 'test_ask_correct_no_question', 'test_ask_question_90_percent_keyword', 'test_ask_question_equilateral', 'test_ask_question_invalid_question', 'test_ask_question_isosceles', 'test_ask_question_multiple_keywords', 'test_ask_question_no_question_mark', 'test_ask_question_no_valid_match', 'test_ask_question_scalene', 'test_ask_question_with_ASCII_ques_mark', 'test_ask_question_with_no_spaces', 'test_ask_teach', 'test_ask_teach_teach', 'test_teach_with_no_ask']
#0008:['test_ask_question_invalid_question']
#0009:['test_ask_question_no_question_mark', 'test_ask_question_with_ASCII_ques_mark']
#0010:['test_ask_question_with_no_spaces']
#0011:['test_ask_question_90_percent_keyword']
#0012:['test_ask_question_equilateral', 'test_ask_question_isosceles', 'test_ask_question_multiple_keywords', 'test_ask_question_scalene']
#0013:['test_ask_question_equilateral', 'test_ask_question_isosceles', 'test_ask_question_scalene']
#0014:['test_ask_question_no_valid_match']
#0015:['test_ask_teach']
#0016:['test_ask_accept_function_pointer']
#0017:['test_teach_with_no_ask']
#0018:['test_ask_teach_teach']
#0019:['test_ask_correct', 'test_ask_correct_no_question']
#0020:['test_ask_accept_function_pointer']
#0021:['test_teach_with_no_ask']
#0050:['add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0051:['add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0052:['add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0053:['add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0054:['add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0055:['add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0056:['add_req_and_call', 'add_req_and_call', 'add_req_and_call']
#0057:['add_req_and_call']
#0100:['test_is_file_in_repo', 'test_is_file_in_repo_path_exists', 'test_is_file_in_repo_untracked']
#0101:['test_func_use_git_execute', 'test_get_repo_root', 'test_path_checker', 'test_status_get_diff_files', 'test_status_get_untracked_files', 'test_status_has_untracked_files', 'test_status_is_clear', 'test_status_is_repo_dirty', 'test_status_subprocess_dummy_data', 'test_status_subprocess_empty']
#0102:['test_what_is_status_of_repo_hashes']
#0103:['test_what_is_branch_name']
#0104:['test_what_is_repo_url']
When I ask "What time is it?" I want to be given the current date/time so I can stay up to date:['test_ask_date_time']
When I ask "What is the n digit of fibonacci?" I want to receive the answer so I don't have to figure it out myself:['test_ask_fibbonacci_n_float', 'test_ask_fibbonacci_n_int', 'test_ask_fibbonacci_n_negative', 'test_ask_fibbonacci_n_no_parameter', 'test_ask_fibbonacci_n_zero']
When I ask "What is the n digit of pi?" I want to receive the answer so I don't have to figure it out myself:['test_ask_pi_float', 'test_ask_pi_int', 'test_ask_pi_negative', 'test_ask_pi_zero']
When I ask "Please clear memory." I was the application to clear user set questions and answers so I can reset the application:['test_ask_clear_memory']
When I say "Open the door hal!", I want the application to say "I'm afraid I can't do that <user name> so I know that is not an option:['test_ask_open_door']
When I ask "Convert <number> <units> to <units>." I want to receive the converted value and units so I can know the answer.:['test_convert_cm_m_float', 'test_convert_cm_m_int', 'test_convert_gallon_pint', 'test_convert_gallon_quart', 'test_convert_invalid_input', 'test_convert_invalid_km_lbs', 'test_convert_invalid_lbs_quart', 'test_convert_kg_g', 'test_convert_kg_lbs', 'test_convert_kg_mg', 'test_convert_km_m', 'test_convert_lbs_kg', 'test_convert_m_km', 'test_convert_mm_km']
When I ask for a numberic conversion I want at least 10 different units I can convert from/to:['test_convert_invalid_gallon_km']
When I say "Please add num1 and num2." I want to receive the added result of two numbers.:['test_my_add_float', 'test_my_add_int', 'test_my_add_invalid_number']
When I say "Please subtract num1 and num2." I want to receive the subtracted result of two numbers.:['test_my_subtract_float', 'test_my_subtract_int', 'test_my_subtract_invalid_number']
When I say "Please divide num1 and num2." I want to receive the divided result of two numbers.:['test_my_divide_float', 'test_my_divide_int', 'test_my_divide_invalid_number']
When I say "Please multiply num1 and num2." I want to receive the multiplied result of two numbers.:['test_my_multiply_float', 'test_my_multiply_int', 'test_my_multiply_invalid_number']
When I say "Please mod num1 and num2." I want to receive the moded result of two numbers.:['test_my_mod_float', 'test_my_mod_int', 'test_my_mod_invalid_number']
When I ask "Are you happy?" I want to receive the answer "I'm always happy!":['test_always_happy']
When I ask "Where can I go to have a good time?" I want to receive the answer "Club".:['test_good_time']
When I ask "Which is the best restaurant around here?" I want to receive the answer "Use a search engine idiot!".:['test_best_restaurant']
When I ask "What is my name?" I want to receive the answer "Your name is <username>".:['test_your_name']
When I ask "How is the weather going to be tomorrow?" I want to receive the answer "Check your weather app!":['test_weather']
